'.source.js':
  'Debugger':
    'prefix': '_db'
    'body': 'debugger;'
  'Import React Component and ProTypes':
    'prefix': '_import react component and proptypes'
    'body': "import React, { Component, PropTypes } from 'react';"
  'Import StyleSheet':
    'prefix': '_import stylesheet'
    'body': "import { StyleSheet } from 'react-native';"
  'Class':
    'prefix': '_class'
    'body': """
       class ${1:ClassName} extends Component {

       }
    """
  'Constructor':
    'prefix': '_init'
    'body': """
       constructor(props) {
         super(props);
         $1
       }
    """
  'Constructor':
    'prefix': '_render'
    'body': """
       render = () => {
         $1
       }
    """
  'Export Default':
    'prefix': '_export'
    'body': 'export default ${1:moduleName};'
  'PropTypes':
    'prefix': '_prop'
    'body': """
       static propTypes = {
         $1
       }
    """
  'String PropTypes':
    'prefix': '_prop string'
    'body': """
       ${1:prop}: PropTypes.string,$2
    """
  'Number PropTypes':
    'prefix': '_prop number'
    'body': """
       ${1:prop}: PropTypes.number,$2
    """
  'Object PropTypes':
    'prefix': '_prop object'
    'body': """
       ${1:prop}: PropTypes.object,$2
    """
  'Function PropTypes':
    'prefix': '_prop function'
    'body': """
       ${1:prop}: PropTypes.func,$2
    """
  'Boolean PropTypes':
    'prefix': '_prop boolean'
    'body': """
       ${1:prop}: PropTypes.bool,$2
    """
  'Default PropTypes':
    'prefix': '_default_prop'
    'body': """
       static defaultProps = {
         $1
       };
    """
  'Component Will Mount':
    'prefix': '_component willmount'
    'body': """
       componentWillMount = () => {
         $1
       }
    """
  'Component Will Unmount':
    'prefix': '_component will unmount'
    'body': """
       componentWillUnmount = () => {
         $1
       }
    """
  'Component Did Mount':
    'prefix': '_component did mount'
    'body': """
       componentDidMount = () => {
         $1
       }
    """
  'Component Will Receive Props':
    'prefix': '_component will receive props'
    'body': """
       componentWillReceiveProps = (nextProps) => {
         $1
       }
    """
  'Component Should Update':
    'prefix': '_component should update'
    'body': """
       shouldComponentUpdate = (nextProps, nextState) => {
         $1
       }
    """
  'Component Will Update':
    'prefix': '_component will update'
    'body': """
       componentWillUpdate = (nextProps, nextState) => {
         $1
       }
    """
  'Component Did Update':
    'prefix': '_component did update'
    'body': """
       componentDidUpdate = (prevProps, prevState) => {
         $1
       }
    """
